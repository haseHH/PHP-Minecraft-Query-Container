name: Container Build
on:
  push:
    branches:
      - main
  schedule:
    #         ┌───────────── minute (0 - 59)
    #         │ ┌───────────── hour (0 - 23)
    #         │ │ ┌───────────── day of the month (1 - 31)
    #         │ │ │ ┌───────────── month (1 - 12 or JAN-DEC)
    #         │ │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
    #         │ │ │ │ │
    #         │ │ │ │ │
    #         │ │ │ │ │
    - cron: '30 3 1 * *' # First of each month, 3:30 UTC

jobs:
  container-build:
    name: Container Build
    runs-on: ubuntu-latest
    steps:
      - name: Get available platforms from base image
        run: |
          $baseImage = "php:8-apache"
          Write-Host "GET manifest OF base image [ '${baseImage}' ] FROM docker hub"
          $manifestJson = $(docker manifest inspect --verbose $baseImage)
          $manifest = ConvertFrom-Json -InputObject ($manifestJson | Out-String)
          Write-Host "GET supported platforms FROM manifest"
          $platformArray = $manifest | ForEach-Object {
            $platform = @(
              $_.Descriptor.platform.os,
              $_.Descriptor.platform.architecture,
              $_.Descriptor.platform.variant
            ) | Where-Object {-not [string]::IsNullOrEmpty($_)}
            $platform -join '/'
          } | Sort-Object
          $platforms = $platformArray -join ','
          Write-Host "SET environment variable [ 'container_platforms' ] TO [ '${platforms}' ]"
          Out-File -InputObject "container_platforms=${platforms}" -FilePath $env:GITHUB_ENV -Append
        shell: pwsh

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push container image (Try 1)
        id: try1
        uses: docker/build-push-action@v2
        with:
          platforms: ${{ env.container_platforms }}
          push: true
          tags: ghcr.io/hasehh/php-minecraft-query:latest
        timeout-minutes: 15
        continue-on-error: true

      - name: Build and push container image (Try 2)
        id: try2
        uses: docker/build-push-action@v2
        with:
          platforms: ${{ env.container_platforms }}
          push: true
          tags: ghcr.io/hasehh/php-minecraft-query:latest
        timeout-minutes: 15
        continue-on-error: true
        if: steps.try1.outcome=='failure'

      - name: Build and push container image (Try 3)
        id: try3
        uses: docker/build-push-action@v2
        with:
          platforms: ${{ env.container_platforms }}
          push: true
          tags: ghcr.io/hasehh/php-minecraft-query:latest
        timeout-minutes: 15
        continue-on-error: true
        if: steps.try2.outcome=='failure'

      - name: Build and push container image (Try 4)
        id: try4
        uses: docker/build-push-action@v2
        with:
          platforms: ${{ env.container_platforms }}
          push: true
          tags: ghcr.io/hasehh/php-minecraft-query:latest
        timeout-minutes: 15
        continue-on-error: true
        if: steps.try3.outcome=='failure'

      - name: Build and push container image (Try 5)
        uses: docker/build-push-action@v2
        with:
          platforms: ${{ env.container_platforms }}
          push: true
          tags: ghcr.io/hasehh/php-minecraft-query:latest
        timeout-minutes: 15
        if: steps.try4.outcome=='failure'
